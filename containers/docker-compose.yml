version: "3.7"
services:
  database:
    build:
      context: database
    image: monitor/database
    container_name: database
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/mysql
    ports:
      - 3316:3306
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
  petclinic:
    build:
      context: petclinic
      dockerfile: Dockerfile.dc
    image: 'monitor/petclinic:0.0.$(BUILD_NUMBER)'
    container_name: petclinic
    environment:
      - DBSERVERNAME=database
      - DBUSERNAME=root
      - DBPASSWORD=petclinic
    ports:
      - 1080:8080
  wordpress:
    build:
      context: wordpress
    image: monitor/wordpress
    container_name: wordpress
    volumes:
      - type: volume
        source: wp-data
        target: /var/www/html
    ports:
      - 1180:8001
      - 1280:8080
    environment:
    - WORDPRESS_DB_USER=root
    - WORDPRESS_DB_PASSWORD=petclinic
    - WORDPRESS_DB_NAME=wordpress
    - WORDPRESS_DB_HOST=database
    - WORDPRESS_TABLE_PREFIX=wp_
  dbmon:
    image: prom/mysqld-exporter:v0.13.0
    container_name: dbmon
    environment:
      DATA_SOURCE_NAME: 'exporter:promexporter123@(database:3306)/'
    command: --collect.global_status --collect.info_schema.innodb_metrics --collect.auto_increment.columns --collect.info_schema.processlist --collect.binlog_size --collect.info_schema.tablestats --collect.global_variables --collect.info_schema.query_response_time --collect.info_schema.userstats --collect.info_schema.tables --collect.perf_schema.tablelocks --collect.perf_schema.file_events --collect.perf_schema.eventswaits --collect.perf_schema.indexiowaits --collect.perf_schema.tableiowaits --collect.slave_status
  prometheus:
    build:
      context: prometheus
    image: monitor/prometheus
    container_name: prometheus
    volumes:
      - type: volume
        source: prom-data
        target: /var/lib/prometheus
    ports:
      - 9100:9100
      - 9090:9090
  grafana:
    build:
      context: grafana
    image: monitor/grafana
    container_name: grafana
    ports:
      - 3000:3000
  dbclient:
    build:
      context: dbclient
    image: monitor/dbclient
    container_name: dbclient

  itrs:
      build:
        context: itrs
        dockerfile: Dockerfile.ubuntu
      image: steve353/monitorlab-itrs:2.0
      hostname: b4abc4b146ad
      container_name: itrs
      ports:
        - 7039:7039
        - 7036:7036
      deploy:
        resources:
          limits:
            memory: 200M
          reservations:
            memory: 50M
      volumes:
        - ${PWD}/ITRSLic:/opt/itrs/licensedir

volumes:
  db-data:
  prom-data:
  wp-data:
